
To do the homeworks you need to use python; it is recommended to
install/use [[https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html][anaconda/miniconda]], with either
- one of the [[https://docs.anaconda.com/anaconda/user-guide/tasks/integration/index.html][IDEs described on the anaconda docs]], (for beginners,
  choose one that you have used in the past), or
- Visual Studio Code as described in the [[https://aeturrell.github.io/python4DS/introduction.html][python for data science
  online book, Getting Started chapter]]. [[https://learn.microsoft.com/en-us/visualstudio/python/tutorial-working-with-python-in-visual-studio-step-00-installation?view=vs-2022][Official Microsoft Docs]].
- emacs, which allows you to write/edit code without using the mouse,
  and has great python support, including conda environments,
  interactive execution, completion, ...
  - [[https://www.youtube.com/playlist?list=PLwc48KSH3D1OeAHFQhWpd8Fz8rLhTaD7t][My emacs and python screencasts show you how to install emacs and
    configure it to work with python]].
  - [[https://www.gnu.org/software/emacs/download.html][Download and Install GNU Emacs]].
  - [[https://elpy.readthedocs.io/en/latest/introduction.html#installation][Installation instructions for Elpy, which is a python IDE for emacs]].
  - [[https://www.emacswiki.org/emacs/PythonProgrammingInEmacs][PythonProgrammingInEmacs on the emacswiki has instructions for
    setting up other emacs python IDEs]].

** Instructions for conda (all students)

After [[https://docs.conda.io/en/latest/miniconda.html][downloading conda]] you can install all packages for this class,
same versions that I use, via:

#+begin_src shell-script
conda env create -f https://raw.githubusercontent.com/tdhock/cs499-599-fall-2022/master/environment.yml
#+end_src

OR (less memory usage):

#+begin_src shell-script
conda env create -f https://raw.githubusercontent.com/tdhock/cs499-599-fall-2022/master/environment-p39only.yml
pip install torchtext plotnine numpy pandas pillow scikit-image
#+end_src

That should create a new "cs499f22" python environment with the
required packages. Before you activate an environment, you need to
setup your shell for the first time.

#+begin_src shell-script
conda init bash
#+end_src

That should put some code in your ~/.bash_profile, I had to copy it to
my ~/.bashrc to get it to work on my setup (git bash in emacs shell on
windows). After restarting your shell you should see a (base) prefix
in your prompt, which indicates the name of the currently activated
conda environment.  You can activate another environment via

#+begin_src shell-script
conda activate cs499f22
#+end_src

After activation, that environment will be used for new python
processes, looking for python modules, etc.

** Python support in emacs (only students who want to use emacs)

First of all, if this is your first time ever using emacs, please type
C-h t (type h while holding down control, then let go of control and
type t) to open the emacs tutorial. Read through the entire tutorial
and do all of the exercises, which will teach you the most important
keyboard shortcuts for navigating and editing code. Keep re-doing
the tutorial every day until you remember all of the keyboard shortcuts.

To get python support in emacs I had to install emacs packages
(elpy,conda). To do that first you need to put the following in your
~/.emacs file (which contains user-specific commands to run on emacs startup)
to tell it to download packages from the MELPA
repository,

#+BEGIN_SRC elisp
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/") t)
#+END_SRC

After putting the above in your ~/.emacs you need to restart emacs,
then run M-x package-list-packages (M-x means hold down the option/alt
key and type x) to see a list of packages you can install. Search for
elpy and conda (maybe with C-s, meaning hold down control key and type
s), mark for installation by typing i, then type x to install all
packages marked for installation. Finally to tell emacs to use elpy
with python code, and my conda environments, I put the following in my
~/.emacs file:

#+begin_src elisp
  (elpy-enable)
  (setq conda-anaconda-home (expand-file-name "~/miniconda3"))
  (setq conda-env-home-directory conda-anaconda-home)
#+end_src

Make sure to change the path above from "~/miniconda3" to 
wherever you have installed miniconda, then again restart emacs.
In emacs When editing a python file we can "activate" the conda
environment via M-x conda-env-activate RET cs499f22 RET then C-c C-z
to get an interactive shell, then
- C-RET to send line and step,
- C-c to send highlighted region.

See
https://elpy.readthedocs.io/en/latest/ide.html for more elpy key
commands (sending code from python code files to the interactive
shell), and https://realpython.com/emacs-the-best-python-editor/ for a
nice tutorial about emacs and python.
